Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 11:00 AM (20 mins)
    Lunch Break : 1:00 PM (1 hr)
    Tea Break   : 3:30 PM (20 mins)
    Wind up     : 5:30 PM

Methodolgy:
    No powerpoints
    100% hands on

Repository
    https://github.com/tkmagesh/JD-React-May-2022

About You
    Name
    Experience
    Primary Skillset
    Experience in React (if any)

Books:
    Patterns of Enterprise Application Architecture (PoEAA) (Martin Fowler)
    Agile Principles Patterns and Practices (Robert.C. Marting)
    Refactoring (Martin Fowler)
    TDD
    Head First Design Patterns
    Refactoring to Patterns (Joshua Kerievsky)
    Growing Object Oriented Software Guided by Tests


Domain Driven Design


 
React?
    Framework for building RIA / SPA

SSR (server side rendering)
    Next.js (React)

Salary = Basic + HRA + DA - Tax(%)

Assumptions:
    1. Preparing the app for deployment (creating separate CSS files, JS files etc) is taken care by another team.
    2. The app meets 100% expectations of the sponsor.
        No more UI enhances are needed.
        No validation logic is needed.

ES6 (ES2015 / ECMAScript6 / ESNext)
1. let
2. const
3. array destructuring
4. rest operator (arrays)
5. spread operator (arrays)
6. object destructuring
7. rest operator (objects)
8. spread operator (objects)
9. default parameters
10. arrow functions
11. iterators (for..of)
12. classes

Array Methods
    forEach
    map
    reduce
    filter

Exercise
var products = [
	{id : 6, name : 'Pen', cost : 50, units : 20, category : 'stationary'},
	{id : 9, name : 'Ten', cost : 70, units : 70, category : 'stationary'},
	{id : 3, name : 'Len', cost : 60, units : 60, category : 'grocery'},
	{id : 5, name : 'Zen', cost : 30, units : 30, category : 'grocery'},
	{id : 1, name : 'Ken', cost : 20, units : 80, category : 'utencil'},
    {id : 7, name : 'Mouse', cost : 100, units : 20, category : 'electronics'}
];

Write the code for the following:
(NOTE: DO NOT use a loop)

1. Filter the stationary products (use the 'filter' method)
        var stationaryProducts = products.filter(product => product.category === 'stationary')

2. Print the name & cost of the products (use the 'forEach' method)
        products.forEach(product => console.log(product.name, product.cost))


3. Find the minimum cost (use the 'reduce' method)
        products.reduce((result, product) => product.cost < result ? product.cost : result, Number.MAX_VALUE)

4. Find the product with the least cost (use the 'reduce' method)
        products.reduce((result, product) => result.cost < product.cost ? result : product)

5. Create a new list of products with the products cost applied with 10% discount (use the 'map' method)
        var discountedProducts = products.map(product => ({...product, cost : product.cost * 0.9 }))


Component
    encapsulation of Presentation + User Interaction + State

HTML vs JSX
    HTML
        Open tags without corresponding close tags are allowed
        "for" attributes are allowed
        "class" attributes are allowed

    JSX
        Every open tag MUST have a corresponding close tag
        Use "htmlFor" inplace of "for" attributes
        Use "className" inplace of "class" attributes


Create a React component (Calculator) (using state) for the following
    <h1>Calculator</h1>
    <hr>
    <input type="number" name="" id="">
    <input type="number" name="" id="">
    <br>
    <button>Add</button>
    <button>Subtract</button>
    <button>Multiply</button>
    <button>Divide</button>
    <div>Result</div>

Create a Salary Calculator using React